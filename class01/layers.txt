workers -> processo em segundo plano
    -> toda logica pesada que envolva CPU
    -> tudo que pode travar a tela (for loop, machine laerning, AI, processamento de Web Cam)
    -> ele chama as regras de negocio da services

services ->
    -> toda logica de negocio
    -> toda chamada externe (API, arquivos, banco de dados)

views ->
    -> toda a interação com a DOM(coma a HTML, com a página)

controllers ->
    -> é aintermediária entre (services e/ou workes) e views

factories ->
    -> é a que importa as dependências
    -> cria o objeto final para fazermos as chamadas
    -> retorna a função que inicializa o fluxo daquele componente (init)

index.js -> é o responsável por chamar todas as chamadas
